(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{414:function(s,a,t){"use strict";t.r(a);var n=t(0),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"第10次题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第10次题"}},[s._v("#")]),s._v(" 第10次题")]),s._v(" "),t("p",[t("strong",[s._v("1. 子类A继承父类B, A a = new A(); 则父类B构造函数、父类B静态代码块、父类B非静态代码块、子类A构造函数、子类A静态代码块、子类A非静态代码块 执行的先后顺序是？")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("A、父类Ｂ静态代码块->父类Ｂ构造函数->子类Ａ静态代码块->父类Ｂ非静态代码块->子类Ａ构造函数->子类Ａ非静态代码块\nB、父类Ｂ静态代码块->父类Ｂ构造函数->父类Ｂ非静态代码块->子类Ａ静态代码块->子类Ａ构造函数->子类Ａ非静态代码块\nC、父类Ｂ静态代码块->子类Ａ静态代码块->父类Ｂ非静态代码块->父类Ｂ构造函数->子类Ａ非静态代码块->子类Ａ构造函数\nD、父类Ｂ构造函数->父类Ｂ静态代码块->父类Ｂ非静态代码块->子类Ａ静态代码块->子类Ａ构造函数->子类Ａ非静态代码块\n")])])]),t("p",[t("strong",[s._v("答案")])]),s._v(" "),t("p",[s._v("C")]),s._v(" "),t("p",[t("strong",[s._v("解释")])]),s._v(" "),t("p",[s._v("会先执行静态代码块，因为静态代码块是类级别的，是在创建对象之前就执行的。因为子类继承了父类，所以父类的静态代码块会先执行，接着执行子类的静态代码块。")]),s._v(" "),t("p",[s._v("因为构造函数可能要给动态代码块的一些成员变量赋值，所以必须在这之前先执行动态代码块，要不然构造函数会出现相关的成员属性无定义。所以会先执行动态代码块，在执行构造函数。一般先按父类的执行，再按子类的执行。")]),s._v(" "),t("p",[t("strong",[s._v("2. 下列哪个说法是正确的（）")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("A、ConcurrentHashMap使用synchronized关键字保证线程安全\nB、HashMap实现了Collction接口\nC、Array.asList方法返回java.util.ArrayList对象\nD、SimpleDateFormat是线程不安全的\n")])])]),t("p",[t("strong",[s._v("答案")])]),s._v(" "),t("p",[s._v("D")]),s._v(" "),t("p",[t("strong",[s._v("解释")])]),s._v(" "),t("p",[s._v("A选项中，ConcurrentHashMap 使用segment来分段和管理锁，segment继承自ReentrantLock，因此ConcurrentHashMap使用ReentrantLock来保证线程安全。")]),s._v(" "),t("p",[s._v("B中，HashMap定义规则如下：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("HashMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AbstractMap")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Map")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Cloneable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Serializable")]),s._v("\n")])])]),t("p",[s._v("C中，应该是Arrays.asList()，其将一个数组转化为一个List对象，这个方***返回一个ArrayList类型的对象， 这个ArrayList类并非java.util.ArrayList类，而是Arrays类的内部类：")]),s._v(" "),t("p",[t("img",{attrs:{src:"https://uploadfiles.nowcoder.com/images/20161222/121471_1482397416383_8DD3874C12FFAF9C83FDDFE1903997DD",alt:"图片说明"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);