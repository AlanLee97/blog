(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{544:function(t,e,n){"use strict";n.r(e);var s=n(0),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"jsp的九大内置对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#jsp的九大内置对象"}},[t._v("#")]),t._v(" JSP的九大内置对象")]),t._v(" "),n("p",[t._v("JSP内置对象和属性列举如下：")]),t._v(" "),n("p",[n("strong",[t._v("1.request对象")]),t._v("\n客户端的请求信息被封装在request对象中，通过它才能了解到客户的需求，然后做出响应。它是HttpServletRequest类的实例。\n"),n("strong",[t._v("2.response对象")]),t._v("\nresponse对象包含了响应客户请求的有关信息，但在JSP中很少直接用到它。它是HttpServletResponse类的实例。\n"),n("strong",[t._v("3.session对象")]),t._v("\nsession对象指的是客户端与服务器的一次会话，从客户连到服务器的一个WebApplication开始，直到客户端与服务器断开连接为止。它是HttpSession类的实例.\n"),n("strong",[t._v("4.out对象")]),t._v("\nout对象是JspWriter类的实例,是向客户端输出内容常用的对象\n"),n("strong",[t._v("5.page对象")]),t._v("\npage对象就是指向当前JSP页面本身，有点象类中的this指针，它是java.lang.Object类的实例\n"),n("strong",[t._v("6.application对象")]),t._v("\napplication对象实现了用户间数据的共享，可存放全局变量。它开始于服务器的启动，直到服务器的关闭，在此期间，此对象将一直存在；这样在用户的前后连接或不同用户之间的连接中，可以对此对象的同一属性进行操作；在任何地方对此对象属性的操作，都将影响到其他用户对此的访问。服务器的启动和关闭决定了application对象的生命。它是ServletContext类的实例。\n"),n("strong",[t._v("7.exception对象")]),t._v("\nexception对象是一个例外对象，当一个页面在运行过程中发生了例外，就产生这个对象。如果一个JSP页面要应用此对象，就必须把isErrorPage设为true，否则无法编译。他实际上是java.lang.Throwable的对象\n"),n("strong",[t._v("8.pageContext对象")]),t._v("\npageContext对象提供了对JSP页面内所有的对象及名字空间的访问，也就是说他可以访问到本页所在的SESSION，也可以取本页面所在的application的某一属性值，他相当于页面中所有功能的集大成者，它的本 类名也叫pageContext。\n"),n("strong",[t._v("9.config对象")]),t._v("\nconfig对象是在一个Servlet初始化时，JSP引擎向它传递信息用的，此信息包括Servlet初始化时所要用到的参数（通过属性名和属性值构成）以及服务器的有关信息（通过传递一个ServletContext对象）")])])}),[],!1,null,null,null);e.default=o.exports}}]);